
 3강.
 3-1 ~ 3-2.



 # 변수.

변수 선언문.
int main( void )
{
	int a ; ( a에 4byte 메모리 할당 )
	int b,c ; ( b와 c에 4byte 메모리 할당 )
	a = 10 ; ( 초기화 - 대입 )
	b = a ; ( 초기화 - 대입 )
	c = a + 20 ; ( 초기화 - 대입 )
}

메모리 주소.
byte 당 하나의 주소값을 가진다. ( 4바이트 - 101,102,103,104 )

변수 값 대입.
대입연산자 '='를 통해 변수에 값을 대입한다.
첫번째로 값을 대입하는 것을 초기화라고 한다.
a = 10 ;

정수 타입.
short : 정수 2byte.
int : 정수 4byte. ( 표준 단위 - 32비트 )
long : 정수 4byte. ( %ld )
long long : 정수 8byte. ( %lld )
char : 문자 1byte. ( %c - 문자로 활용, %d - ASCII 정수로 활용 )
signed : 음수까지 표현하는 정수.
unsigned : 양수만 표현하는 정수. ( %u )

오버플로우.
1byte( 8비트 )에서 256의 숫자를 넣으면 오브플로우가 되어 0이된다.

실수 타입.
float : 4byte( %f , 3.4f로 표현 - 유효숫자가 너무 적다, 유효 자릿수 6~7, 지수 8비트, 가수 23비트 ) 
double : 8byte ( %lf , 표준 단위 - %f를 써도 출력된다, 유효 자릿수 15~16, 지수 11비트, 가수 52비트 )
long double : 8byte( %Lf , 컴파일마다 메모리 공간이 다르다 - 호환성이 떨어진다 )

문자열.
문자들의 배열로 이루어져 있다. 
마지막에 null문자를 넣어서 문자열의 마지막을 알려준다.
%s를 통해 출력한다.

문자열 선언.
char str[20] = "apple" ;
X - 일반 변수 대입 방식은 사용할 수 없다.
strcpy( str, "banana" ) : apple에서 banana로 바뀐다.

const.
변수를 초기화한 이후에 변수에 값을 바꿀 수 없다.

식별자 identifier.
변수이름, 함수이름, 구조체 이름 등에 사용한다.
A~Z, a~z, 0~9, _ 를 사용할 수 있다.
숫자로 이름을 시작할 수 없다.
공백이나 특수문자를 사용할 수 없다.

예약어.
컴파일러에 약속되어 있는 단어.



 # 데이터 입력.

변수에 데이터 입력하기.
int a ;
scanf( "%d" , &a ) : 키보드로 입력한 값을 a변수 주소에 입력.

주소연산자.
&a : a라는 변수에 위치. ( Ampersand )

변환문자.
%hd : 2byte short를 의미.
%d : 4byte int를 의미.
%ld : 4byte long을 의미.
%lld : 8byte long long을 의미.
%c : 1byte char를 의미.
%f : 4byte float를 의미.
%lf : 8byte double을 의미.
%Lf : 8byte long double을 의미. ( 컴파일러마다 다르다 )

여러 변수에 데이터 입력하기.
int age ; ( 4byte )
double height ; ( 8byte )
scanf( " %d%lf " , &age, &height ) ;
입력할 때 age와 height를 구분하기 위해 한 칸이상 띄어줘야된다.
스페이스, 탭, 엔터는 구분자 역할을 한다. ( 화이트 스페이스 )

문자 입력하기.
char grade ;
scanf( "%c" , &grade ) ; 
아무것도 입력하지 않고 enter를 입력하면 \n( 개행문자 )가 들어간다.

문자열 입력하기.
char name[ 20 ] ;
scanf( "%s" , name ) ;
배열은 이미 주소값이기 때문에 &를 붙이지 않고 변수이름을 그대로 사용한다.
배열에서 지정한 크기를 넘으면 Exception이 발생한다.
name[20]이라고 쓰면 19글자까지 입력가능하다. ( null 문자 하나 포함 )









